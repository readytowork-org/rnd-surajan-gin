package services

import (
	"rnd-surajan-gin/api/dtos"
	"rnd-surajan-gin/database"
	"rnd-surajan-gin/models"

	"gorm.io/gorm"
)

func CreateTask(task models.Task) (data models.Task, err error) {
	return task, database.DB.Create(&task).Error
}

func GetAllTasks() (data []models.Task, result *gorm.DB) {
	var tasks []models.Task
	return tasks, database.DB.Find(&tasks)
}

func GetTaskById(id string) (data models.Task, result *gorm.DB) {
	var task models.Task
	// The commented code only works when our "id" is automatically generated by GORM and is an auto-incremented number.
	// result := database.DB.First(&task, id)
	return task, database.DB.Where("id = ?", id).First(&task)
}

func UpdateTaskById(id string, payload dtos.UpdateTaskRequest) (data models.Task, findErr error, updateErr error) {
	// Get Task by id i.e. Primary Key.
	var task models.Task
	// This code only works when our "id" is automatically generated by GORM and is an auto-incremented number.
	// result := database.DB.First(&task, id)
	result := database.DB.Where("id = ?", id).First(&task)
	// Update "task" model with the given "payload".
	updateResult := database.DB.Model(&task).Updates(payload)
	return task, result.Error, updateResult.Error
}

func DeleteTaskByIdService(id string) (result *gorm.DB) {
	// Delete Task by id i.e. Primary Key.
	var task models.Task
	/*
		ðŸ’¡Note: If not used "Unscoped()", then "Delete()" will only do soft-delete because our "tasks" table contain "deleted_at" column.
		When we created our "Task" model, we included "gorm.Model" which will append "deleted_at" column in our "tasks" table.
		See: https://gorm.io/docs/delete.html#Soft-Delete for more info.
	*/
	// This code only works when our "id" is automatically generated by GORM and is an auto-incremented number.
	// result := database.DB.Unscoped().Delete(&task, id)
	return database.DB.Where("id = ?", id).Unscoped().Delete(&task)
}
