package services

import (
	"rnd-surajan-gin/dtos"
	"rnd-surajan-gin/infrastructure"
	"rnd-surajan-gin/models"

	"gorm.io/gorm"
)

type UserService struct {
	db infrastructure.Database
}

func NewUserService(db infrastructure.Database) UserService {
	return UserService{db: db}
}

func (cc UserService) CreateUser(user models.User) (data models.User, err error) {
	return user, cc.db.DB.Create(&user).Error
}

func (cc UserService) GetAllUsers() (data []models.User, result *gorm.DB) {
	var users []models.User
	return users, cc.db.DB.Find(&users)
}

func (cc UserService) GetUserById(id string) (data models.User, result *gorm.DB) {
	var user models.User
	// The commented code only works when our "id" is automatically generated by GORM and is an auto-incremented number.
	// result := cc.db.DB.First(&user, id)
	return user, cc.db.DB.Where("id = ?", id).First(&user)
}

func (cc UserService) UpdateUserById(id string, payload dtos.UpdateUserRequest) (data models.User, findErr error, updateErr error) {
	// Get User by id i.e. Primary Key.
	var user models.User
	result := cc.db.DB.Where("id = ?", id).First(&user)
	updateResult := cc.db.DB.Model(&user).Updates(payload)
	return user, result.Error, updateResult.Error
}

func (cc UserService) DeleteUserById(id string) (result *gorm.DB) {
	// Delete User by id i.e. Primary Key.
	var user models.User
	return cc.db.DB.Where("id = ?", id).Unscoped().Delete(&user)
}
